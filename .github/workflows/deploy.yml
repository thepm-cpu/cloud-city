name: Deploy Cloud City

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-north-1
      TF_BACKEND_BUCKET: cloud-city-tf-state

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" -backend-config="key=cloud-city.tfstate" -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -out=plan.tfout

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve plan.tfout

      - name: Get EC2 Outputs
        id: get-outputs
        working-directory: terraform
        run: |
          terraform output
          echo "EC2_INSTANCE_ID=$(terraform output -raw ec2_instance_id)" >> $GITHUB_OUTPUT
          echo "EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT

      - name: Wait for instance to boot
        run: sleep 60  

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Run Ansible Playbook
        working-directory: ansible
        run: |
          echo "[ec2]" > inventory.ini
          echo "${{ steps.get-outputs.outputs.EC2_PUBLIC_IP }} ansible_user=${{ secrets.ANSIBLE_REMOTE_USER }} ansible_ssh_private_key_file=../key.pem ansible_host_key_checking=False" >> inventory.ini
          ansible-playbook -i inventory.ini -vvvv playbook.yml --extra-vars "ssh_public_key='${{ secrets.SSH_PUBLIC_KEY }}'"